{"ast":null,"code":"export default {\n  name: 'Products',\n\n  data() {\n    return {\n      selectedComponent: 'motherboards',\n      showFilters: false,\n      list: [{\n        text: 'Материнские платы',\n        icon: 'mdi-chart-tree',\n        value: 'motherboards'\n      }, {\n        text: 'Процессоры',\n        icon: 'mdi-memory',\n        value: 'processors'\n      }, {\n        text: 'ОЗУ',\n        icon: 'mdi-alpha-r-box',\n        value: 'ram'\n      }, {\n        text: 'Жесткие диски',\n        icon: 'mdi-harddisk',\n        value: 'rom'\n      }, {\n        text: 'Видеокарты',\n        icon: 'mdi-rectangle',\n        value: 'videocards'\n      }, {\n        text: 'Мониторы',\n        icon: 'mdi-monitor',\n        value: 'monitors'\n      }, {\n        text: 'Компьютерные мыши',\n        icon: 'mdi-rodent',\n        value: 'mouses'\n      }, {\n        text: 'Клавиатуры',\n        icon: 'mdi-keyboard',\n        value: 'keyboards'\n      }],\n      items: {},\n      filters: {}\n    };\n  },\n\n  computed: {\n    cartComponents() {\n      return this.$store.getters.getCart;\n    },\n\n    filteredItems() {\n      const items = Object.assign({}, this.items);\n      const processorIndex = this.cartComponents.findIndex(item => item.type === 'processors');\n      const motherboardIndex = this.cartComponents.findIndex(item => item.type === 'motherboards');\n      const ramIndex = this.cartComponents.findIndex(item => item.type === 'ram');\n\n      if (processorIndex !== -1) {\n        const processor = this.cartComponents[processorIndex].product;\n        items.motherboards = items.motherboards.filter(item => item.socket === processor.socket);\n        this.filters.Processors = processor.socket;\n      } else {\n        delete this.filters.Processors;\n      }\n\n      if (motherboardIndex !== -1) {\n        const motherboard = this.cartComponents[motherboardIndex].product;\n        items.processors = items.processors.filter(item => item.socket === motherboard.socket);\n        items.ram = items.ram.filter(item => item.memoryType === motherboard.memoryType);\n        this.filters.Motherboard = motherboard.socket;\n        this.filters.Ram = motherboard.memoryType;\n      } else {\n        delete this.filters.Motherboard;\n        delete this.filters.Ram;\n      }\n\n      if (ramIndex !== -1) {\n        const ram = this.cartComponents[ramIndex].product;\n        items.motherboards = items.motherboards.filter(item => item.memoryType === ram.memoryType);\n        this.filters.Ram = ram.memoryType;\n      }\n\n      return items;\n    }\n\n  },\n\n  async mounted() {\n    await this.loadData();\n  },\n\n  methods: {\n    async loadData() {\n      try {\n        this.items = (await import('../server/components')).default;\n      } catch {\n        console.log('Load error');\n      }\n    },\n\n    addToCart(product) {\n      this.$store.dispatch('setProduct', {\n        product,\n        type: this.selectedComponent\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","selectedComponent","showFilters","list","text","icon","value","items","filters","computed","cartComponents","$store","getters","getCart","filteredItems","Object","assign","processorIndex","findIndex","item","type","motherboardIndex","ramIndex","processor","product","motherboards","filter","socket","Processors","motherboard","processors","ram","memoryType","Motherboard","Ram","mounted","loadData","methods","default","console","log","addToCart","dispatch"],"sourceRoot":"","sources":["C:\\Users\\Mvideo\\Desktop\\pcconf\\frontend\\src\\views\\Products.vue"],"sourcesContent":["<script>\nexport default {\n  name: 'Products',\n  data () {\n    return {\n      selectedComponent: 'motherboards',\n      showFilters: false,\n      list: [\n        { text: 'Материнские платы', icon: 'mdi-chart-tree', value: 'motherboards' },\n        { text: 'Процессоры', icon: 'mdi-memory', value: 'processors' },\n        { text: 'ОЗУ', icon: 'mdi-alpha-r-box', value: 'ram' },\n        { text: 'Жесткие диски', icon: 'mdi-harddisk', value: 'rom' },\n        { text: 'Видеокарты', icon: 'mdi-rectangle', value: 'videocards' },\n        { text: 'Мониторы', icon: 'mdi-monitor', value: 'monitors' },\n        { text: 'Компьютерные мыши', icon: 'mdi-rodent', value: 'mouses' },\n        { text: 'Клавиатуры', icon: 'mdi-keyboard', value: 'keyboards' }\n      ],\n      items: {},\n      filters: {}\n    }\n  },\n  computed: {\n    cartComponents () {\n      return this.$store.getters.getCart\n    },\n    filteredItems () {\n      const items = Object.assign({}, this.items)\n      const processorIndex = this.cartComponents.findIndex(item => item.type === 'processors')\n      const motherboardIndex = this.cartComponents.findIndex(item => item.type === 'motherboards')\n      const ramIndex = this.cartComponents.findIndex(item => item.type === 'ram')\n\n      if (processorIndex !== -1) {\n        const processor = this.cartComponents[processorIndex].product\n\n        items.motherboards = items.motherboards.filter(item => item.socket === processor.socket)\n        this.filters.Processors = processor.socket\n      } else {\n        delete this.filters.Processors\n      }\n\n      if (motherboardIndex !== -1) {\n        const motherboard = this.cartComponents[motherboardIndex].product\n\n        items.processors = items.processors.filter(item => item.socket === motherboard.socket)\n        items.ram = items.ram.filter(item => item.memoryType === motherboard.memoryType)\n        this.filters.Motherboard = motherboard.socket\n        this.filters.Ram = motherboard.memoryType\n      } else {\n        delete this.filters.Motherboard\n        delete this.filters.Ram\n      }\n\n\n      if (ramIndex !== -1) {\n        const ram = this.cartComponents[ramIndex].product\n\n        items.motherboards = items.motherboards.filter(item => item.memoryType === ram.memoryType)\n        this.filters.Ram = ram.memoryType\n      }\n\n      return items\n    }\n  },\n  async mounted () {\n    await this.loadData()\n  },\n  methods: {\n    async loadData () {\n      try {\n        this.items = (await import('../server/components')).default\n      } catch {\n        console.log('Load error')\n      }\n    },\n    addToCart (product) {\n      this.$store.dispatch('setProduct', {\n        product,\n        type: this.selectedComponent\n      })\n    }\n  }\n}\n</script>\n\n<template>\n  <v-row>\n    <div v-show=\"false\">{{filteredItems}}</div>\n    <v-col cols=\"12\" sm=\"12\" md=\"4\" lg=\"3\" xl=\"3\">\n      <v-card>\n        <v-list color=\"#0a0a0a\">\n          <v-subheader class=\"subheader\">Комплектующие</v-subheader>\n          <v-list-item-group v-model=\"selectedComponent\" color=\"#d76e00\">\n            <v-list-item\n              v-for=\"(item, i) in list\"\n              :key=\"i\"\n              :value=\"item.value\"\n            >\n              <v-list-item-icon>\n                <v-icon v-text=\"item.icon\" color=\"white\"></v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title class=\"components-text\" v-text=\"item.text\" text-color=\"white\"></v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n          <v-divider></v-divider>\n          <v-list-group\n            v-if=\"Object.keys(filters).length\"\n            v-model=\"showFilters\"\n            no-action\n            color=\"#d76e00\"\n            prepend-icon=\"mdi-filter\"\n          >\n            <template v-slot:activator>\n              <v-list-item-content>\n                <v-list-item-title style=\"color: white\">Фильтры</v-list-item-title>\n              </v-list-item-content>\n            </template>\n            <v-list-item class=\"pl-4\" v-for=\"(filter, key) in filters\">\n              <v-list-item-content>\n                <v-list-item-title style=\"color: white\">{{key}}</v-list-item-title>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-chip\n                  color=\"#d76e00\"\n                  text-color=\"white\"\n                >\n                  {{filter.toUpperCase()}}\n                </v-chip>\n                </v-list-item-action>\n            </v-list-item>\n          </v-list-group>\n        </v-list>\n      </v-card>\n    </v-col>\n    <v-col cols=\"12\" sm=\"12\" md=\"8\" lg=\"9\" xl=\"9\" class=\"pt-2 product-container\">\n      <v-row>\n        <v-col :key=\"item.id\" v-for=\"item in filteredItems[selectedComponent]\" cols=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"3\" class=\"pa-1\">\n          <v-card height=\"440\" color=\"#0a0a0a\">\n            <v-img\n              :src=\"require('../' + item.image)\"\n              height=\"200px\"\n              :contain=\"true\"\n            ></v-img>\n\n            <v-card-title class=\"card-title\">\n              {{item.name}}\n            </v-card-title>\n\n            <v-card-subtitle style=\"color: white\">\n              {{item.description}}\n            </v-card-subtitle>\n\n            <v-card-actions class=\"card-actions\">\n          <span class=\"title font-weight-light pl-2\">\n            {{item.price}} $\n          </span>\n\n              <v-spacer></v-spacer>\n              <v-btn\n                color=\"#d76e00\"\n                class=\"pb-2 pr-4\"\n                icon\n                @click=\"addToCart(item)\"\n              >\n                <v-icon large>mdi-cart</v-icon>\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-col>\n  </v-row>\n</template>\n\n<style scoped>\n  .card-actions {\n    position: absolute !important;\n    bottom: 0;\n    width: 100%;\n    color: white\n  }\n\n  .product-container {\n    height: calc(100vh - 80px);\n    overflow-x: auto\n  }\n\n  .product-container::-webkit-scrollbar {\n    width: 3px;\n  }\n  .product-container::-webkit-scrollbar-thumb {\n    background: #d76e00;\n  }\n  .product-container::-webkit-scrollbar-thumb:hover {\n    background: rgba(86, 52, 233, 0.9);\n  }\n\n  .components-text {\n    color: white;\n  }\n\n  .subheader {\n    color: white;\n}\n\n  .card-title {\n    color: white;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}